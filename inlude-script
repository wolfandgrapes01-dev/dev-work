import os
import re
import csv

# 配置根目录（请修改为你的实际路径）
root_dir = r"C:\path\to\your\root"

# 只分析以下扩展名
extensions = ('.cpp', '.c', '.h', '.hpp')

# 匹配 #include "xxx" 或 #include <xxx>
include_pattern = re.compile(r'#include\s+[<"](.+?)[>"]')

# 存储依赖关系
dependencies = []

for dirpath, dirnames, filenames in os.walk(root_dir):
    # 🚫 跳过 .svn 文件夹
    dirnames[:] = [d for d in dirnames if d.lower() != ".svn"]

    for filename in filenames:
        if filename.endswith(extensions):
            full_path = os.path.abspath(os.path.join(dirpath, filename))

            try:
                with open(full_path, 'r', encoding='utf-8', errors='ignore') as f:
                    for line in f:
                        match = include_pattern.search(line)
                        if match:
                            include_file = match.group(1)
                            include_path = None

                            # 优先查找同目录
                            candidate = os.path.join(dirpath, include_file)
                            if os.path.exists(candidate):
                                include_path = os.path.abspath(candidate)
                            else:
                                # 在整个项目中查找（排除 .svn）
                                for root, subdirs, files in os.walk(root_dir):
                                    subdirs[:] = [d for d in subdirs if d.lower() != ".svn"]
                                    if os.path.basename(include_file) in files:
                                        include_path = os.path.abspath(os.path.join(root, include_file))
                                        break

                            dependencies.append((full_path, include_path or include_file))

            except PermissionError:
                print(f"⚠️ 无法访问: {full_path}")
            except Exception as e:
                print(f"⚠️ 读取错误 {full_path}: {e}")

# 输出 CSV
output_file = os.path.join(root_dir, "dependencies.csv")
with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(["source_file", "included_file"])
    writer.writerows(dependencies)

print(f"✅ 依赖关系已输出到: {output_file}")